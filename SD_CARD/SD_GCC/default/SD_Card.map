Archive member included because of file (symbol)

c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_mulsi3.o)
                              FAT32.o (__mulsi3)
c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_udivmodsi4.o)
                              FAT32.o (__udivmodsi4)
c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
                              c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
                              FAT32.o (__do_copy_data)
c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                              FAT32.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

appendFileLocation  0x4               FAT32.o
firstDataSector     0x4               FAT32.o
fileSize            0x4               FAT32.o
bytesPerSector      0x2               FAT32.o
totalClusters       0x4               FAT32.o
rootCluster         0x4               FAT32.o
startBlock          0x4               FAT32.o
buffer              0x200             FAT32.o
sectorPerCluster    0x2               FAT32.o
unusedSectors       0x4               FAT32.o
totalBlocks         0x4               FAT32.o
reservedSectorCount
                    0x2               FAT32.o
appendStartCluster  0x4               FAT32.o
freeClusterCountUpdated
                    0x1               FAT32.o
appendFileSector    0x4               FAT32.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
LOAD FAT32.o
LOAD SD_main.o
LOAD SD_routines.o
LOAD SPI_routines.o
LOAD UART_routines.o
LOAD c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a
LOAD c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x254c
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000054      0x16d FAT32.o
 .progmem.data  0x000001c1      0x241 SD_main.o
 .progmem.data  0x00000402        0xf SD_routines.o
                0x00000412                . = ALIGN (0x2)
 *fill*         0x00000411        0x1 00
                0x00000412                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000412        0x0 linker stubs
 *(.trampolines*)
                0x00000412                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000412                __ctors_start = .
 *(.ctors)
                0x00000412                __ctors_end = .
                0x00000412                __dtors_start = .
 *(.dtors)
                0x00000412                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000412        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
                0x00000412                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000412        0xc c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000041e       0x16 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
                0x0000041e                __do_copy_data
 .init4         0x00000434       0x10 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                0x00000434                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000444        0x8 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000044c        0x4 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
                0x0000044c                __vector_1
                0x0000044c                __vector_12
                0x0000044c                __bad_interrupt
                0x0000044c                __vector_6
                0x0000044c                __vector_3
                0x0000044c                __vector_11
                0x0000044c                __vector_13
                0x0000044c                __vector_17
                0x0000044c                __vector_19
                0x0000044c                __vector_7
                0x0000044c                __vector_5
                0x0000044c                __vector_4
                0x0000044c                __vector_9
                0x0000044c                __vector_2
                0x0000044c                __vector_15
                0x0000044c                __vector_8
                0x0000044c                __vector_14
                0x0000044c                __vector_10
                0x0000044c                __vector_16
                0x0000044c                __vector_18
                0x0000044c                __vector_20
 .text          0x00000450     0x16b4 FAT32.o
                0x00000d4c                getSetNextCluster
                0x0000123a                readFile
                0x0000094c                memoryStatistics
                0x00000558                convertFileName
                0x0000077c                getSetFreeCluster
                0x0000121e                deleteFile
                0x00000668                searchNextFreeCluster
                0x000013dc                writeFile
                0x0000088a                freeMemoryUpdate
                0x00000b80                getBootSectorData
                0x00000e46                findFiles
                0x00000450                getFirstSector
                0x0000049a                displayMemory
 .text          0x00001b04      0x63e SD_main.o
                0x00001b04                port_init
                0x00001b30                init_devices
                0x00001b1c                uart0_init
                0x00001b66                main
 .text          0x00002142      0x298 SD_routines.o
                0x000021a8                SD_erase
                0x0000222a                SD_writeSingleBlock
                0x00002142                SD_sendCommand
                0x000022d4                SD_readSingleBlock
                0x00002344                SD_init
 .text          0x000023da       0x1e SPI_routines.o
                0x000023e2                SPI_transmit
                0x000023da                spi_init
                0x000023ec                SPI_receive
 .text          0x000023f8       0xce UART_routines.o
                0x00002402                transmitByte
                0x0000249e                transmitString_F
                0x0000240a                transmitHex
                0x000024b2                transmitString
                0x000023f8                receiveByte
 .text          0x000024c6        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_mulsi3.o)
 .text          0x000024c6        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x000024c6        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .text          0x000024c6        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .text          0x000024c6        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                0x000024c6                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000024c6       0x3e c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_mulsi3.o)
                0x000024c6                __mulsi3
 .text.libgcc   0x00002504       0x44 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_udivmodsi4.o)
                0x00002504                __udivmodsi4
 .text.libgcc   0x00002548        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00002548        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00002548        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
                0x00002548                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00002548        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
                0x00002548                exit
                0x00002548                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00002548        0x4 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x0000254c                _etext = .

.data           0x00800060       0x1e load address 0x0000254c
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060       0x13 FAT32.o
 .data          0x00800073        0x0 SD_main.o
 .data          0x00800073        0x0 SD_routines.o
 .data          0x00800073        0x0 SPI_routines.o
 .data          0x00800073        0xb UART_routines.o
 .data          0x0080007e        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_mulsi3.o)
 .data          0x0080007e        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x0080007e        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .data          0x0080007e        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .data          0x0080007e        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080007e                . = ALIGN (0x2)
                0x0080007e                _edata = .
                0x0080007e                PROVIDE (__data_end, .)

.bss            0x0080007e      0x22f
                0x0080007e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080007e        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080007e        0x0 FAT32.o
 .bss           0x0080007e        0x0 SD_main.o
 .bss           0x0080007e        0x0 SD_routines.o
 .bss           0x0080007e        0x0 SPI_routines.o
 .bss           0x0080007e        0x0 UART_routines.o
 .bss           0x0080007e        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_mulsi3.o)
 .bss           0x0080007e        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x0080007e        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_exit.o)
 .bss           0x0080007e        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080007e        0x0 c:/winavr-20090313/bin/../lib/gcc/avr/4.3.2/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080007e      0x22f FAT32.o
                0x0080007e                appendFileLocation
                0x00800082                firstDataSector
                0x00800086                fileSize
                0x0080008a                bytesPerSector
                0x0080008c                totalClusters
                0x00800090                rootCluster
                0x00800094                startBlock
                0x00800098                buffer
                0x00800298                sectorPerCluster
                0x0080029a                unusedSectors
                0x0080029e                totalBlocks
                0x008002a2                reservedSectorCount
                0x008002a4                appendStartCluster
                0x008002a8                freeClusterCountUpdated
                0x008002a9                appendFileSector
                0x008002ad                PROVIDE (__bss_end, .)
                0x0000254c                __data_load_start = LOADADDR (.data)
                0x0000256a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008002ad        0x0
                0x008002ad                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008002ad                PROVIDE (__noinit_end, .)
                0x008002ad                _end = .
                0x008002ad                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xa0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 FAT32.o
 .debug_aranges
                0x00000020       0x20 SD_main.o
 .debug_aranges
                0x00000040       0x20 SD_routines.o
 .debug_aranges
                0x00000060       0x20 SPI_routines.o
 .debug_aranges
                0x00000080       0x20 UART_routines.o

.debug_pubnames
                0x00000000      0x4d0
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x227 FAT32.o
 .debug_pubnames
                0x00000227      0x167 SD_main.o
 .debug_pubnames
                0x0000038e       0x97 SD_routines.o
 .debug_pubnames
                0x00000425       0x40 SPI_routines.o
 .debug_pubnames
                0x00000465       0x6b UART_routines.o

.debug_info     0x00000000     0x1b63
 *(.debug_info)
 .debug_info    0x00000000      0xf23 FAT32.o
 .debug_info    0x00000f23      0x694 SD_main.o
 .debug_info    0x000015b7      0x273 SD_routines.o
 .debug_info    0x0000182a       0xc6 SPI_routines.o
 .debug_info    0x000018f0      0x273 UART_routines.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x670
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x1fd FAT32.o
 .debug_abbrev  0x000001fd      0x19b SD_main.o
 .debug_abbrev  0x00000398       0xde SD_routines.o
 .debug_abbrev  0x00000476       0x8d SPI_routines.o
 .debug_abbrev  0x00000503      0x16d UART_routines.o

.debug_line     0x00000000     0x1650
 *(.debug_line)
 .debug_line    0x00000000      0xaa5 FAT32.o
 .debug_line    0x00000aa5      0x663 SD_main.o
 .debug_line    0x00001108      0x2cc SD_routines.o
 .debug_line    0x000013d4       0xc6 SPI_routines.o
 .debug_line    0x0000149a      0x1b6 UART_routines.o

.debug_frame    0x00000000      0x230
 *(.debug_frame)
 .debug_frame   0x00000000       0xe0 FAT32.o
 .debug_frame   0x000000e0       0x50 SD_main.o
 .debug_frame   0x00000130       0x60 SD_routines.o
 .debug_frame   0x00000190       0x40 SPI_routines.o
 .debug_frame   0x000001d0       0x60 UART_routines.o

.debug_str      0x00000000      0x82e
 *(.debug_str)
 .debug_str     0x00000000      0x67c FAT32.o
                                0x6be (size before relaxing)
 .debug_str     0x0000067c       0x8b SD_main.o
                                0x225 (size before relaxing)
 .debug_str     0x00000707       0x61 SD_routines.o
                                0x129 (size before relaxing)
 .debug_str     0x00000768       0x34 SPI_routines.o
                                 0xd8 (size before relaxing)
 .debug_str     0x0000079c       0x92 UART_routines.o
                                0x151 (size before relaxing)

.debug_loc      0x00000000     0x1498
 *(.debug_loc)
 .debug_loc     0x00000000      0xe7e FAT32.o
 .debug_loc     0x00000e7e      0x1be SD_main.o
 .debug_loc     0x0000103c      0x2da SD_routines.o
 .debug_loc     0x00001316       0x26 SPI_routines.o
 .debug_loc     0x0000133c      0x15c UART_routines.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(SD_Card.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x48
 .debug_ranges  0x00000000       0x48 UART_routines.o
